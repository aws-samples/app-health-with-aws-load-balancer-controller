"use strict";function _aws_cdk_cloudformation_include_CfnIncludeProps(p){if(p!=null){visitedObjects.add(p);try{if(p.loadNestedStacks!=null)for(const o of Object.values(p.loadNestedStacks))visitedObjects.has(o)||_aws_cdk_cloudformation_include_CfnIncludeProps(o)}finally{visitedObjects.delete(p)}}}function _aws_cdk_cloudformation_include_IncludedNestedStack(p){if(p!=null){visitedObjects.add(p);try{visitedObjects.has(p.includedTemplate)||(p.includedTemplate,void 0)}finally{visitedObjects.delete(p)}}}function _aws_cdk_cloudformation_include_CfnInclude(p){}function print(name,deprecationMessage){const deprecated=process.env.JSII_DEPRECATED,deprecationMode=["warn","fail","quiet"].includes(deprecated)?deprecated:"warn",message=`${name} is deprecated.
  ${deprecationMessage.trim()}
  This API will be removed in the next major release.`;switch(deprecationMode){case"fail":throw new DeprecationError(message);case"warn":console.warn("[WARNING]",message);break}}function getPropertyDescriptor(obj,prop){const descriptor=Object.getOwnPropertyDescriptor(obj,prop);if(descriptor)return descriptor;const proto=Object.getPrototypeOf(obj),prototypeDescriptor=proto&&getPropertyDescriptor(proto,prop);return prototypeDescriptor||{}}const visitedObjects=new Set;class DeprecationError extends Error{constructor(...args){super(...args),Object.defineProperty(this,"name",{configurable:!1,enumerable:!0,value:"DeprecationError",writable:!1})}}module.exports={print,getPropertyDescriptor,DeprecationError,_aws_cdk_cloudformation_include_CfnIncludeProps,_aws_cdk_cloudformation_include_IncludedNestedStack,_aws_cdk_cloudformation_include_CfnInclude};
