---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appsimulator
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - "*"
  verbs:
  - "*"
- apiGroups:
  - rbac.authorization.k8s.io
  - extensions
  - apps
  resources:
  - "*"
  verbs:
  - "*"
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  - pods
  - deployments
  verbs:
  - get
  - list
  - watch
  - create
  - delete
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: appsimulator
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appsimulator
  namespace: default
subjects:
- kind: ServiceAccount
  name: appsimulator
  namespace: default
roleRef:
  kind: ClusterRole
  name: appsimulator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apploader
  name: apploader
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apploader
  template:
    metadata:
      labels:
        app: apploader
    spec:
      nodeSelector:
        alpha.eksctl.io/nodegroup-name: lb-health-arm-ng-1
      serviceAccountName: appsimulator
      containers:
      - env:
        - name: SLEEP_BETWEEN_CYCLE
          value: "10"
        - name: APP_URL
          value: "https://kd.yahav.sa.aws.dev/logistics"
          #value: "http://django-app-1443363332.us-west-2.elb.amazonaws.com/logistics"
        - name: DEPLOY_NAME
          value: "appsimulator"
        image: 604429864555.dkr.ecr.us-west-2.amazonaws.com/loader:py39aarch64
        imagePullPolicy: Always
        name: apploader
        command: ["/app-loader.sh"]
        resources:
          requests:
            cpu: 128m
            memory: 128Mi
